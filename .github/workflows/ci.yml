name: CI

on:
  pull_request:
    branches: [ '**' ]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [ main ]

permissions:
  contents: read
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  code-quality:
    name: "🔍 Code Quality & Security"
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: 📦 Install Linters & Tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy bandit safety ruff
      - name: 📋 Lint (Flake8)
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: 🎨 Format Check (Black)
        run: black --check --diff . || true
      - name: 🔡 Import Sort Check (isort)
        run: isort --check-only --diff . || true
      - name: 🏷️ Type Check (MyPy)
        run: mypy . --ignore-missing-imports || true
      - name: 🔒 Security Scan (Bandit)
        run: bandit -q -r . || true
      - name: 🛡️ Dependency Check (Safety)
        run: safety check --full-report || true
      - name: 🐶 Ruff (optional)
        run: ruff check . || true

  unit-tests:
    name: "🧪 Unit Tests (${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.9', '3.10', '3.11' ]
    services:
      mongodb:
        image: mongo:6.0
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test123
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel poetry-core
          pip install -r requirements.txt
          pip install pytest pytest-asyncio pytest-cov pytest-mock
      - name: 🔎 Dependency integrity (pip check)
        run: pip check || true
      - name: 🧪 Smoke compile
        run: python -m compileall -q .
      - name: 🧪 Run Tests
        env:
          BOT_TOKEN: ${{ secrets.TEST_BOT_TOKEN || '1234567890:TEST_TOKEN_FOR_TESTING' }}
          MONGODB_URL: mongodb://test:test123@localhost:27017/test_db?authSource=admin
          REDIS_URL: redis://localhost:6379/0
          GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          PASTEBIN_API_KEY: ${{ secrets.TEST_PASTEBIN_KEY }}
        run: pytest -v --cov=. --cov-report=xml --cov-report=term

