name: 📚 Build Documentation (Sphinx)

on:
  # הפעלה ידנית בלבד כדי להימנע מחפיפה עם documentation.yml
  workflow_dispatch:

jobs:
  build-docs:
    name: Build Sphinx Docs
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements/*.txt
            docs/requirements.txt

      - name: Install dependencies (docs only)
        run: |
          python -m pip install --upgrade pip
          # Build docs without full project deps; conf.py mocks heavy imports
          pip install -r docs/requirements.txt || true

      - name: Build documentation
        env:
          DISABLE_DB: "true"
          SPHINX_MOCK_IMPORTS: "true"
          BOT_TOKEN: "dummy_bot_token_for_docs"
          MONGODB_URL: "mongodb://localhost:27017/test"
        run: |
          cd docs
          sphinx-build -b html . _build/html -W --keep-going -j auto

      - name: Upload docs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html

      - name: Comment PR with RTD Preview link
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const project = process.env.RTD_PROJECT || 'code-keeper-bot';
            const branch = context.payload.pull_request.head.ref;
            const rtdUrl = `https://${project}.readthedocs.io/en/${branch}/`;

            const body = `## 📖 Documentation Preview (Read the Docs)\n\n- 🔗 ${rtdUrl}\n\n> אם ה‑URL לא פעיל, ודא ש‑RTD מחובר לריפו וש"Build pull requests" מופעל.`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existing = comments.find(c => c.user.type === 'Bot' && c.body && c.body.includes('Documentation Preview (Read the Docs)'));
            if (existing) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existing.id,
                body,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body,
              });
            }

